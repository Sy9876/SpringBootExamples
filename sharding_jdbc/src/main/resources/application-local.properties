#server.port=8082
logging.level.root=INFO
logging.level.OrderMapper=TRACE

debug=false

# \u4ee5\u4e0b\u8bbe\u7f6e\u9700\u8981\u4fdd\u5bc6\u3002\u4fdd\u5b58\u5728\u5de5\u7a0b\u5916\u90e8\u3002
# \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u5165\uff0c\u4f8b\u5982 java -jar ...   --cn.sy.db.user=root
cn.sy.db.host=localhost
cn.sy.db.port=3306
cn.sy.db.schema=
cn.sy.db.user=
cn.sy.db.password=
# end


#######################################
# datasource (use for spring security and spring session)
#######################################
spring.datasource.ds2.url=jdbc:mysql://127.0.0.1:3306/ds?useSSL=false&serverTimezone=UTC
spring.datasource.ds2.username=user
spring.datasource.ds2.password=user
spring.datasource.ds2.driverClassName=com.mysql.cj.jdbc.Driver




#######################################
# mybatis
#######################################
####  http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/
mybatis.configLocation=classpath:mybatis-config.xml



#######################################
# sharding-jdbc-core-spring-boot-starter
#######################################
#### http://shardingjdbc.io/document/legacy/2.x/cn/02-guide/configuration/
#### 4.Spring Boot\u914d\u7f6e

cn.sy.ds.type=com.alibaba.druid.pool.DruidDataSource
cn.sy.ds.driverClassName=com.mysql.cj.jdbc.Driver

#sharding.jdbc.datasource.names=ds,ds_0,ds_1
sharding.jdbc.datasource.names=ds

sharding.jdbc.datasource.ds.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds.driverClassName=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.ds.url=jdbc:mysql://127.0.0.1:3306/ds?useSSL=false&serverTimezone=UTC
sharding.jdbc.datasource.ds.username=user
sharding.jdbc.datasource.ds.password=user

# \u9ed8\u8ba4\u6570\u636e\u6e90ds\uff0c\u9ed8\u8ba4\u4e0d\u5206\u5e93\uff0c\u4e0d\u5206\u8868
sharding.jdbc.config.sharding.default-data-source-name=ds
sharding.jdbc.config.sharding.default-database-strategy.none.none=
sharding.jdbc.config.sharding.default-table-strategy.none.none=

sharding.jdbc.config.sharding.tables.tb_user_order.actualDataNodes=ds.tb_user_order_${0..2}
sharding.jdbc.config.sharding.tables.tb_user_order.tableStrategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.tables.tb_user_order.tableStrategy.inline.algorithm-expression=tb_user_order_${Math.abs(user_id.hashCode()) % 3}

sharding.jdbc.config.sharding.tables.tb_shop_order.actualDataNodes=ds.tb_shop_order_${0..4}
sharding.jdbc.config.sharding.tables.tb_shop_order.tableStrategy.standard.sharding-column=shop_code
sharding.jdbc.config.sharding.tables.tb_shop_order.tableStrategy.standard.precise-algorithm-class-name=cn.sy.config.MyShopShardingAlgorithm

sharding.jdbc.config.sharding.tables.tb_shop.actualDataNodes=ds.tb_shop
sharding.jdbc.config.sharding.tables.tb_shop_order.tableStrategy.standard.sharding-column=shop_code
sharding.jdbc.config.sharding.tables.tb_shop_order.tableStrategy.standard.precise-algorithm-class-name=cn.sy.config.MyShopShardingAlgorithm


# t_order t_order_item \u6309user_id\u5206\u5e93\uff0corder_id\u5206\u8868
#sharding.jdbc.config.sharding.tables.t_order.actualDataNodes=ds.t_order_${0..1}
#sharding.jdbc.config.sharding.tables.t_order.tableStrategy.inline.sharding-column=order_id
#sharding.jdbc.config.sharding.tables.t_order.tableStrategy.inline.algorithm-expression=t_order_${order_id % 2}
#sharding.jdbc.config.sharding.tables.t_order.keyGeneratorColumnName=order_id
#sharding.jdbc.config.sharding.tables.t_order_item.actualDataNodes=ds.t_order_item_${0..1}
#sharding.jdbc.config.sharding.tables.t_order_item.tableStrategy.inline.sharding-column=order_id
#sharding.jdbc.config.sharding.tables.t_order_item.tableStrategy.inline.algorithm-expression=t_order_item_${order_id % 2}
#sharding.jdbc.config.sharding.tables.t_order_item.keyGeneratorColumnName=order_item_id

# t_order t_order_item \u7ed1\u5b9a\uff0c \u6309user_id\u5206\u8868
sharding.jdbc.config.sharding.tables.t_order.actualDataNodes=ds.t_order_${0..9}
sharding.jdbc.config.sharding.tables.t_order.tableStrategy.inline.sharding-column=user_name
sharding.jdbc.config.sharding.tables.t_order.tableStrategy.inline.algorithm-expression=t_order_${Math.abs(user_name.hashCode() % 10)}

sharding.jdbc.config.sharding.tables.t_order_item.actualDataNodes=ds.t_order_item_${0..9}
sharding.jdbc.config.sharding.tables.t_order_item.tableStrategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.tables.t_order_item.tableStrategy.inline.algorithm-expression=t_order_item_${user_id % 10}


# t_shop_order t_shop_order_item \u7ed1\u5b9a\uff0c \u6309shop_id\u5206\u8868\uff0c\u81ea\u5b9a\u4e49\u8def\u7531\u8868
sharding.jdbc.config.sharding.tables.t_shop_order.actualDataNodes=ds.t_shop_order_${0..9}
sharding.jdbc.config.sharding.tables.t_shop_order.tableStrategy.standard.sharding-column=shop_id
sharding.jdbc.config.sharding.tables.t_shop_order.tableStrategy.standard.precise-algorithm-class-name=cn.sy.config.MyShardingAlgorithm

sharding.jdbc.config.sharding.tables.t_shop_order_item.actualDataNodes=ds.t_shop_order_item_${0..9}
sharding.jdbc.config.sharding.tables.t_shop_order_item.tableStrategy.standard.sharding-column=shop_id
sharding.jdbc.config.sharding.tables.t_shop_order_item.tableStrategy.standard.precise-algorithm-class-name=cn.sy.config.MyShardingAlgorithm


# S_SYSTEM_LOG \u4e0d\u5206\u7247
#sharding.jdbc.config.sharding.tables.S_SYSTEM_LOG.actual-data-nodes=ds.S_SYSTEM_LOG

# t_order t_order_item \u7ed1\u5b9a
sharding.jdbc.config.sharding.bindingTables[0]=t_order,t_order_item
sharding.jdbc.config.sharding.bindingTables[1]=t_shop_order,t_shop_order_item

sharding.jdbc.config.sharding.props.sql.show=true
